# --- SME OVERHAUL: Definitive, Compliance-Focused Version (Corrected) ---
"""
Manages the application's session state, acting as an in-memory eQMS.

This module provides the SessionStateManager class, which orchestrates the
initialization of the mock dataset for the MCED diagnostic service. The data
model is generated by a separate, dedicated function to improve modularity and
is structured to reflect a real-world, PMA-track development program.
"""

# --- Standard Library Imports ---
import logging
import random
from datetime import date, timedelta
from typing import Any, Dict, List, Optional

# --- Third-party Imports ---
import streamlit as st
import numpy as np

# --- Setup Logging ---
logger = logging.getLogger(__name__)


def _create_mced_diagnostic_dhf_model(version: int) -> Dict[str, Any]:
    """
    Generates the complete, interconnected mock dataset for the GenomicsDx Sentry
    MCED Test DHF. This model is specifically tailored for a PMA-class,
    breakthrough-designated genomic diagnostic service.
    """
    base_date = date(2023, 1, 15)
    demo_current_date = base_date + timedelta(days=450)
    gauss = random.gauss

    # --- Central list of team members for consistency ---
    team_list = ["Dr. Elena Reyes", "Dr. Ben Carter", "Dr. Sofia Chen", "Dr. Marcus Thorne", "Dr. Kenji Tanaka", "Laura Vance"]

    return {
        "data_version": version,
        "design_plan": {
            "project_name": "GenomicsDx Sentry™ Multi-Cancer Early Detection (MCED) Test",
            "scope": "This program covers the end-to-end development, validation, and commercialization of a blood-based, cell-free DNA (cfDNA) assay for the early detection of multiple cancer types in asymptomatic individuals. The service includes a sample collection kit, a proprietary wet-lab assay based on methylation analysis, a cloud-based bioinformatics pipeline with a machine learning classifier, and a clinical report for physicians.",
            "intended_use": "The GenomicsDx Sentry™ Test is a qualitative, prescription-only, blood-based screening test for the early detection of a cancer signal across multiple cancer types in individuals aged 50-79 with an average risk for developing cancer. A 'Cancer Signal Detected' result indicates that cancer is likely present and should be confirmed with standard-of-care diagnostic procedures. A 'No Cancer Signal Detected' result does not rule out the presence of cancer.",
            "team_members": [
                {"role": "Program Lead", "name": "Dr. Elena Reyes", "responsibility": "Overall program oversight, budget, and timeline."},
                {"role": "Clinical Lead", "name": "Dr. Ben Carter", "responsibility": "Clinical trial design, execution, and data analysis."},
                {"role": "Assay Development Lead", "name": "Dr. Sofia Chen", "responsibility": "Wet-lab assay design, optimization, and analytical validation."},
                {"role": "Bioinformatics Lead", "name": "Dr. Marcus Thorne", "responsibility": "Bioinformatics pipeline, ML classifier development, and software V&V."},
                {"role": "Regulatory Affairs Lead", "name": "Dr. Kenji Tanaka", "responsibility": "PMA submission strategy and FDA interactions."},
                {"role": "Quality Assurance Lead", "name": "Laura Vance", "responsibility": "DHF owner, QMS compliance, risk management, and audit readiness."}
            ],
            "standards": [
                {"id": "21 CFR 820", "title": "Quality System Regulation", "category": "Regulation"},
                {"id": "ISO 13485:2016", "title": "Medical devices — Quality management systems", "category": "ISO Standard"},
                {"id": "ISO 14971:2019", "title": "Medical devices — Application of risk management", "category": "ISO Standard"},
                {"id": "ISO 62304:2006", "title": "Medical device software — Software life cycle processes", "category": "ISO Standard"},
                {"id": "CLSI EP05-A3", "title": "Evaluation of Precision of Quantitative Measurement Procedures", "category": "CLSI Guideline"}
            ],
            "design_review_plan": [
                {"phase_name": "Assay Freeze", "description": "Review and approve final assay chemistry and protocol before starting formal AV.", "planned_date": str(base_date + timedelta(days=180))},
                {"phase_name": "Algorithm Lock", "description": "Review and approve final classifier model and pipeline version before starting clinical validation.", "planned_date": str(base_date + timedelta(days=365))},
            ]
        },
        "risk_management_file": {
            "plan_scope": "This plan covers all risks associated with the GenomicsDx Sentry™ service, from sample collection to result reporting, focusing on patient harm resulting from incorrect test results.",
            "hazards": [
                {"id": "H-01", "description": "False Negative Result", "foreseeable_event": "Assay fails to detect cancer signal in a patient who has cancer.", "potential_harm": "Delayed diagnosis and treatment, leading to worse clinical outcome.", "initial_S": 5, "initial_O": 3, "final_S": 5, "final_O": 2, "verification_link": "CV-STUDY-001"},
                {"id": "H-02", "description": "False Positive Result", "foreseeable_event": "Assay detects a cancer signal in a patient who does not have cancer.", "potential_harm": "Patient anxiety, unnecessary and potentially invasive diagnostic follow-up procedures.", "initial_S": 4, "initial_O": 3, "final_S": 4, "final_O": 1, "verification_link": "CV-STUDY-001"},
                {"id": "H-03", "description": "Sample Mix-up", "foreseeable_event": "Patient A's sample is processed under Patient B's identity.", "potential_harm": "Incorrect result delivered to two patients.", "initial_S": 5, "initial_O": 2, "final_S": 5, "final_O": 1, "verification_link": "LIMS-VAL-01"},
            ],
            "assay_fmea": [
                {"id": "AFM-01", "process_step": "Bisulfite Conversion", "failure_mode": "Incomplete DNA conversion", "potential_effect": "Incorrect methylation measurement, potential false result.", "S": 4, "O": 3, "D": 2, "mitigation": "Include unmethylated lambda DNA control in every run; set QC metric for conversion efficiency.", "verification_link": "AV-PREC-01"},
            ],
            "service_fmea": [
                {"id": "SFM-01", "process_step": "Classifier Algorithm", "failure_mode": "Model overfitting to training data", "potential_effect": "Poor generalization, reduced accuracy on new patients.", "S": 5, "O": 3, "D": 3, "mitigation": "Use independent hold-out test set; cross-validation; L2 regularization.", "verification_link": "SW-VAL-01"},
            ],
            "overall_risk_benefit_analysis": "The overall residual risk of the GenomicsDx Sentry™ Test, considering the implemented controls for false positive and false negative results, is judged to be acceptable in relation to the substantial clinical benefit of non-invasively detecting multiple cancers at an earlier, more treatable stage."
        },
        "human_factors": {
            "user_profiles": [
                {"user_group": "Phlebotomist", "description": "Certified phlebotomist with experience in clinical sample collection.", "training": "Standard phlebotomy training + product-specific IFU.", "use_environment": "Outpatient clinic or patient service center."},
                {"user_group": "Oncologist", "description": "Board-certified oncologist responsible for patient management.", "training": "Medical degree, specialty training.", "use_environment": "Hospital or outpatient clinic office."}
            ],
            "kit_urra": [{"id":"URRA-K-01", "user_task": "Invert blood collection tube 8-10 times after draw.", "potential_use_error": "Tube not inverted or shaken vigorously.", "potential_harm": "Sample hemolysis, cfDNA degradation, invalid test result.", "related_hazard_id": "H-01", "risk_control_measure": "Clear graphical instructions in IFU; bolded text.", "validation_link": "HF-VAL-01"}],
            "report_urra": [{"id":"URRA-R-01", "user_task": "Interpret 'No Cancer Signal Detected' result.", "potential_use_error": "Physician tells patient they are 'cancer-free'.", "potential_harm": "Patient ignores future symptoms or skips routine screening (e.g., mammogram), leading to delayed diagnosis.", "related_hazard_id": "H-01", "risk_control_measure": "Include explicit limitation on report: 'This is not a diagnostic test...'", "validation_link": "HF-VAL-02"}],
        },
        "design_inputs": { "requirements": [
                {"id": "UN-001", "type": "User Need", "description": "Provide a definitive result (Cancer Signal Detected/Not Detected) to guide patient management.", "parent_id": "", "status": "Active", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "SYS-001", "type": "System", "description": "The test shall achieve >99% specificity across all cancer types in the intended use population.", "parent_id": "UN-001", "status": "Active", "is_risk_control": True, "related_hazard_id": "H-02"},
                {"id": "ASY-001", "type": "Assay", "description": "The assay shall achieve a Limit of Detection (LoD) of <=0.1% tumor fraction for key biomarkers.", "parent_id": "SYS-001", "status": "Active", "is_risk_control": True, "related_hazard_id": "H-01"},
                {"id": "SW-001", "type": "Software", "description": "The bioinformatics pipeline shall align >95% of reads to the hg38 reference genome.", "parent_id": "SYS-001", "status": "Active", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "KIT-001", "type": "Kit", "description": "The blood collection tube shall stabilize cfDNA for up to 7 days at ambient temperature.", "parent_id": "UN-001", "status": "Active", "is_risk_control": False, "related_hazard_id": ""},
            ]},
        "design_outputs": { "documents": [
                {"id": "SPEC-ASY-01", "type": "Assay Spec", "title": "Oligonucleotide Probe Sequences", "version": "1.0", "status": "Approved", "approval_date": str(base_date + timedelta(100)), "linked_input_id": "ASY-001", "link_to_artifact": "/docs/SPEC-ASY-01_v1.0.pdf"},
                {"id": "SPEC-SW-01", "type": "Software Spec", "title": "Bioinformatics Pipeline Software Design Specification (SDS)", "version": "2.1", "status": "Approved", "approval_date": str(base_date + timedelta(250)), "linked_input_id": "SW-001", "link_to_artifact": "https://github.com/genomicsdx/pipeline/docs/sds_v2.1.md"},
                {"id": "MODEL-01", "type": "Algorithm", "title": "Locked Classifier Model v3.0", "version": "3.0", "status": "Approved", "approval_date": str(base_date + timedelta(365)), "linked_input_id": "SYS-001", "link_to_artifact": "/models/classifier_v3.0.pkl"},
            ]},
        "design_reviews": {
            "reviews": [
                {
                    "id": "DR-001",
                    "date": str(demo_current_date - timedelta(days=270)),
                    "attendees": ["Dr. Elena Reyes", "Dr. Sofia Chen", "Laura Vance"],
                    "type": "Technical", "phase": "Assay Concept", "independent_reviewer": "Laura Vance",
                    "scope": "Initial review of assay chemistry and biomarker panel.",
                    "outcome": "Go",
                    "notes": "Concept review complete. Feasibility approved.",
                    "action_items": [
                        {"id": "AI-DR001-01", "description": "Source alternative polymerase for improved stability.", "owner": "Dr. Sofia Chen", "due_date": str(demo_current_date - timedelta(days=255)), "status": "Completed", "risk_priority": "Medium"}
                    ]
                },
                {
                    "id": "DR-002",
                    "date": str(base_date + timedelta(180)),
                    "attendees": team_list,
                    "type": "Phase-Gate", "phase": "Assay Freeze", "independent_reviewer": "Dr. Kenji Tanaka",
                    "scope": "Review of all AV data for assay v1.2. Decision to lock assay design for pivotal studies.",
                    "outcome": "Go",
                    "notes": "AV performance meets all primary endpoints for LoD and Precision. Approved to proceed with this assay version for clinical validation.",
                    "action_items": []
                },
                {
                    "id": "DR-003",
                    "date": str(base_date + timedelta(365)),
                    "attendees": team_list,
                    "type": "Phase-Gate", "phase": "Algorithm Lock", "independent_reviewer": "Dr. Sofia Chen",
                    "scope": "Review of classifier performance on training data. Approval to lock model for clinical validation.",
                    "outcome": "Go with Conditions",
                    "notes": "Performance is acceptable. Condition: Finalize Software V&V report before starting patient enrollment.",
                    "action_items": [
                        {"id": "AI-DR003-01", "description": "Complete and approve SW-V&V-RPT-01.", "owner": "Dr. Marcus Thorne", "due_date": str(base_date + timedelta(380)), "status": "In Progress", "risk_priority": "High"},
                        {"id": "AI-DR003-02", "description": "Update risk file with residual software risks.", "owner": "Laura Vance", "due_date": str(base_date + timedelta(375)), "status": "Open", "risk_priority": "Medium"}
                    ]
                }
            ]
        },
        "design_verification": { "tests": [
                {"id": "AV-LOD-01", "test_type": "Limit of Detection (LoD)", "test_name": "LoD Study by Probit Analysis using Contrived Samples", "input_verified_id": "ASY-001", "output_verified_id": "SPEC-ASY-01", "status": "Completed", "result": "Pass", "report_link": "/reports/AV-LOD-01.pdf"},
                {"id": "AV-PREC-01", "test_type": "Intermediate Precision", "test_name": "Precision Study across 3 operators, 3 lots, 5 days", "input_verified_id": "ASY-001", "output_verified_id": "SPEC-ASY-01", "status": "In Progress", "result": "Pending", "report_link": ""},
                {"id": "SW-VER-01", "test_type": "SW Verification", "test_name": "Unit Test Suite for Alignment Module", "input_verified_id": "SW-001", "output_verified_id": "SPEC-SW-01", "status": "Completed", "result": "Pass", "report_link": "/reports/SW-VER-01.pdf"},
            ]},
        "clinical_study": {
            "nct_id": "NCT08675309", "phase": "Pivotal", "planned_completion_date": str(base_date + timedelta(1095)),
            "primary_endpoints": "Co-primary endpoints are sensitivity and specificity for the detection of a cancer signal, evaluated against a ground truth of two-year follow-up.",
            "enrollment": [
                {"site": "Site-01 (USA)", "target": 5000, "enrolled": 3102},
                {"site": "Site-02 (USA)", "target": 5000, "enrolled": 2895}
            ],
            "performance_metrics": [
                {"metric": "Overall Sensitivity", "value": "N/A (Interim)", "confidence_interval": "N/A"},
                {"metric": "Overall Specificity", "value": "99.5% (Interim)", "confidence_interval": "99.1% - 99.8%"},
                {"metric": "CSO Accuracy (Top 1)", "value": "89.1% (Interim)", "confidence_interval": "85.5% - 92.7%"}
            ],
            "hf_studies": [
                {"id": "HF-VAL-01", "study_name": "Summative Usability Study - Sample Collection Kit", "user_interface_validated": "Sample Collection Kit & IFU", "user_need_validated": "UN-001", "confirms_risk_control": True, "status": "Completed", "report_link": "/reports/HF-VAL-01.pdf"},
                {"id": "HF-VAL-02", "study_name": "Summative Usability Study - Clinical Report Interpretation", "user_interface_validated": "Clinical Report", "user_need_validated": "UN-001", "confirms_risk_control": True, "status": "In Progress", "report_link": ""}
            ]
        },
        "lab_operations": {
            "sops": [{"doc_id": "SOP-LAB-001", "title": "Sample Accessioning and LIMS Entry", "version": "1.2", "status": "Approved"}],
            "infrastructure": [{"asset_id": "SEQ-01", "equipment_type": "Illumina NovaSeq X", "status": "PQ Complete"}],
            "run_qc_history": [
                {"plate_id": "PLT001", "status": "Pass", "input_dna_ng": 55, "library_yield_ng": 350, "dv200_pct": 88},
                {"plate_id": "PLT002", "status": "Fail", "input_dna_ng": 12, "library_yield_ng": 45, "dv200_pct": 45},
                {"plate_id": "PLT003", "status": "Pending", "input_dna_ng": 48, "library_yield_ng": 310, "dv200_pct": 91}
            ]
        },
        "quality_system": {
            "capa_records": [{"id": "CAPA-01", "status": "Closed", "source": "Internal Audit"}, {"id": "CAPA-02", "status": "Open", "source": "Supplier Corrective Action", "action_plan": [{"id": "AI-CAPA02-01", "description": "Qualify new reagent lot from alt supplier", "owner": "Dr. Sofia Chen", "due_date": str(demo_current_date + timedelta(30)), "status": "Open", "risk_priority": "High"}]}],
            "spc_data": {"target": 98.5, "stdev": 0.5, "measurements": [gauss(98.5, 0.5) for _ in range(50)]},
            "equivalence_data": {'reagent_lot_a': list(np.random.normal(0.85, 0.05, 30)), 'reagent_lot_b': list(np.random.normal(0.86, 0.05, 30))},
            "doe_data": [{"pcr_cycles": 10, "input_dna": 20, "library_yield": 250}, {"pcr_cycles": 14, "input_dna": 20, "library_yield": 450}, {"pcr_cycles": 10, "input_dna": 50, "library_yield": 600}, {"pcr_cycles": 14, "input_dna": 50, "library_yield": 1100}],
        },
        "project_management": { "tasks": [
                {"id": "PLAN", "name": "Program Planning & Design Inputs", "start_date": str(base_date), "end_date": str(base_date + timedelta(days=90)), "status": "Completed", "completion_pct": 100, "dependencies": ""},
                {"id": "AV", "name": "Assay Development & Analytical Validation", "start_date": str(base_date + timedelta(days=91)), "end_date": str(base_date + timedelta(days=365)), "status": "In Progress", "completion_pct": 75, "dependencies": "PLAN"},
                {"id": "SW", "name": "Software & Algorithm Development (V&V)", "start_date": str(base_date + timedelta(days=91)), "end_date": str(base_date + timedelta(days=400)), "status": "In Progress", "completion_pct": 80, "dependencies": "PLAN"},
                {"id": "CV", "name": "Pivotal Clinical Study", "start_date": str(base_date + timedelta(days=401)), "end_date": str(base_date + timedelta(days=1200)), "status": "In Progress", "completion_pct": 35, "dependencies": "AV,SW"},
                {"id": "PMA", "name": "PMA Submission Preparation & Filing", "start_date": str(base_date + timedelta(days=1201)), "end_date": str(base_date + timedelta(days=1300)), "status": "Not Started", "completion_pct": 0, "dependencies": "CV"},
            ]},
    }


class SessionStateManager:
    """
    Handles the initialization and access of the application's session state.
    """
    _DHF_DATA_KEY = "dhf_data"
    _CURRENT_DATA_VERSION = 25 # Incremented for corrected data model

    def __init__(self):
        """
        Initializes the session state, loading the mock data if necessary.
        """
        session_data = st.session_state.get(self._DHF_DATA_KEY)
        if not session_data or session_data.get("data_version") != self._CURRENT_DATA_VERSION:
            logger.info(f"Initializing session state with MCED data model v{self._CURRENT_DATA_VERSION}.")
            st.session_state[self._DHF_DATA_KEY] = _create_mced_diagnostic_dhf_model(self._CURRENT_DATA_VERSION)

    def get_data(self, primary_key: str, secondary_key: Optional[str] = None) -> Any:
        """
        Safely retrieves data from the nested session state dictionary.
        Returns an empty dict or list for missing keys to prevent errors.
        """
        try:
            data_store = st.session_state[self._DHF_DATA_KEY]
            if secondary_key:
                return data_store.get(primary_key, {}).get(secondary_key, [])
            else:
                return data_store.get(primary_key, {})
        except KeyError:
            logger.warning(f"Attempted to access non-existent session state key: '{self._DHF_DATA_KEY}'")
            return {} if secondary_key is None else []

    def update_data(self, data: Any, primary_key: str, secondary_key: Optional[str] = None) -> None:
        """Updates the session state with new data."""
        if secondary_key:
            if primary_key not in st.session_state[self._DHF_DATA_KEY]:
                st.session_state[self._DHF_DATA_KEY][primary_key] = {}
            st.session_state[self._DHF_DATA_KEY][primary_key][secondary_key] = data
        else:
            st.session_state[self._DHF_DATA_KEY][primary_key] = data
        logger.info(f"Session state updated for {primary_key}.{secondary_key if secondary_key else ''}")
