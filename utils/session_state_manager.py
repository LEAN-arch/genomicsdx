#genomicsdx/utils/session_state_manager.py
# --- SME OVERHAUL: Definitive, Fully Populated, and Corrected Version ---
"""
Manages the application's session state, acting as an in-memory eQMS.

This module provides the SessionStateManager class, which orchestrates the
initialization of a rich, interconnected, and realistic mock dataset for the
MCED diagnostic service. The data model is generated by a separate, dedicated
function to improve modularity and is structured to reflect a real-world,
late-stage, PMA-track development program.
"""
import logging
import random
from datetime import date, timedelta
from typing import Any, Dict, List, Optional
import streamlit as st
import numpy as np
import pandas as pd

logger = logging.getLogger(__name__)

def _create_mced_diagnostic_dhf_model(version: int) -> Dict[str, Any]:
    """
    Generates the complete, interconnected mock dataset for the GenomicsDx Sentry
    MCED Test DHF. This model is specifically tailored for a PMA-class,
    breakthrough-designated genomic diagnostic service. All data is highly
    interconnected to support realistic traceability and analytics.
    """
    # --- Base Configuration ---
    base_date = date(2023, 1, 15)
    demo_current_date = base_date + timedelta(days=450)
    gauss = random.gauss
    choice = random.choice
    team_list = ["Elena Reyes, PhD", "Ben Carter, MD", "Sofia Chen, PhD", "Marcus Thorne, PhD", "Kenji Tanaka, PhD", "Jose Bautista"]

    # --- ML Data Generation (SME Definitive Refactor) ---
    np.random.seed(42)
    num_samples = 100
    y_series = pd.Series(np.random.randint(0, 2, num_samples), name='target')
    base_features = pd.DataFrame(np.random.rand(num_samples, 7), columns=[f'biomarker_{i}' for i in range(7)])
    promo_a = pd.Series(y_series * 0.5 + np.random.normal(0.2, 0.1, num_samples), name='promoter_A_met')
    enhancer_b = pd.Series(y_series * 0.3 + np.random.normal(0.1, 0.05, num_samples), name='enhancer_B_met')
    noise_feature = pd.Series(np.random.rand(num_samples) * 0.1, name='junk_dna_met')
    X_df = pd.concat([base_features, promo_a, enhancer_b, noise_feature], axis=1)

    # --- DOE Data Generation (SME Definitive Refactor) ---
    doe_df = pd.DataFrame({
        "pcr_cycles": pd.Series([10, 14, 10, 14], dtype='int64'), 
        "input_dna": pd.Series([20, 20, 50, 50], dtype='int64'),
        "library_yield": pd.Series([250.0, 450.0, 600.0, 1100.0], dtype='float64')
    })
    
    # --- RSM Data Generation (SME Enhancement) ---
    # Central Composite Design (CCD) for 2 factors
    # Factor levels in coded units (-1, 0, 1) and axial points (+/- alpha)
    alpha = 1.414
    ccd_points = [
        # Factorial points (replicated)
        [-1, -1], [1, -1], [-1, 1], [1, 1],
        [-1, -1], [1, -1], [-1, 1], [1, 1],
        # Axial points
        [-alpha, 0], [alpha, 0], [0, -alpha], [0, alpha],
        # Center points
        [0, 0], [0, 0], [0, 0], [0, 0]
    ]
    ccd_coded_df = pd.DataFrame(ccd_points, columns=['pcr_coded', 'dna_coded'])
    
    # Map coded units to real-world values
    pcr_center, pcr_range = 12, 4  # e.g., 12 +/- 2 cycles
    dna_center, dna_range = 40, 20  # e.g., 40 +/- 10 ng
    ccd_coded_df['pcr_cycles'] = pcr_center + ccd_coded_df['pcr_coded'] * (pcr_range / 2)
    ccd_coded_df['input_dna'] = dna_center + ccd_coded_df['dna_coded'] * (dna_range / 2)

    # Simulate a response with curvature (a peak to find)
    # Optimum is slightly off-center for realism
    pcr_opt, dna_opt = 0.5, -0.2 
    np.random.seed(101)
    noise = np.random.normal(0, 50, len(ccd_coded_df))
    ccd_coded_df['library_yield'] = 1500 - 150*(ccd_coded_df['pcr_coded'] - pcr_opt)**2 - 200*(ccd_coded_df['dna_coded'] - dna_opt)**2 + 50*ccd_coded_df['pcr_coded']*ccd_coded_df['dna_coded'] + noise
    ccd_coded_df['library_yield'] = ccd_coded_df['library_yield'].clip(lower=100)
    
    rsm_data = ccd_coded_df[['pcr_cycles', 'input_dna', 'library_yield']].to_dict('records')

    # --- Data Model Generation ---
    return {
        "data_version": version,
        "design_plan": {
            "project_name": "GenomicsDx Sentry™ Multi-Cancer Early Detection (MCED) Test",
            "scope": "This program covers the end-to-end development, validation, and commercialization of a blood-based, cell-free DNA (cfDNA) assay for the early detection of multiple cancer types in asymptomatic individuals. The service includes a sample collection kit, a proprietary wet-lab assay based on methylation analysis, a cloud-based bioinformatics pipeline with a machine learning classifier, and a clinical report for physicians.",
            "intended_use": "The GenomicsDx Sentry™ Test is a qualitative, prescription-only, blood-based screening test for the early detection of a cancer signal across multiple cancer types in individuals aged 50-79 with an average risk for developing cancer. A 'Cancer Signal Detected' result indicates that cancer is likely present and should be confirmed with standard-of-care diagnostic procedures. A 'No Cancer Signal Detected' result does not rule out the presence of cancer.",
            "team_members": [
                {"role": "Program Lead", "name": "Elena Reyes, PhD", "responsibility": "Overall program oversight, budget, and timeline."},
                {"role": "Clinical Lead", "name": "Ben Carter, MD", "responsibility": "Clinical trial design, execution, and data analysis."},
                {"role": "Assay Development Lead", "name": "Sofia Chen, PhD", "responsibility": "Wet-lab assay design, optimization, and analytical validation."},
                {"role": "Bioinformatics Lead", "name": "Marcus Thorne, PhD", "responsibility": "Bioinformatics pipeline, ML classifier development, and software V&V."},
                {"role": "Regulatory Affairs Lead", "name": "Kenji Tanaka, PhD", "responsibility": "PMA submission strategy and FDA interactions."},
                {"role": "Quality Assurance Lead", "name": "Jose Bautista", "responsibility": "DHF owner, QMS compliance, risk management, and audit readiness."}
            ],
            "standards": [
                {"id": "21 CFR 820", "title": "Quality System Regulation", "category": "Regulation"},
                {"id": "ISO 13485:2016", "title": "Medical devices — Quality management systems", "category": "ISO Standard"},
                {"id": "ISO 14971:2019", "title": "Medical devices — Application of risk management", "category": "ISO Standard"},
                {"id": "ISO 62304:2006", "title": "Medical device software — Software life cycle processes", "category": "ISO Standard"},
                {"id": "IEC 62366-1:2015", "title": "Application of usability engineering to medical devices", "category": "IEC Standard"},
                {"id": "CLSI EP05-A3", "title": "Evaluation of Precision of Quantitative Measurement Procedures", "category": "CLSI Guideline"},
                {"id": "CLSI EP17-A2", "title": "Evaluation of Detection Capability for Clinical Laboratory Measurement Procedures", "category": "CLSI Guideline"}
            ],
            "clinical_dev_plan": "The pivotal clinical study (PATHFINDER-2) will be a prospective, multi-site, cohort study enrolling 10,000 asymptomatic individuals aged 50-79. Co-primary endpoints are sensitivity and specificity, with CSO accuracy as a key secondary endpoint. All activities are governed by the Clinical Study Protocol CSP-001.",
            "av_master_plan_ref": "AV-MP-001",
            "software_level_of_concern": "Major",
            "sw_dev_plan": "Software will be developed under a phase-gated Agile methodology, compliant with ISO 62304 Class C. All code will be managed in a version-controlled Git repository with mandatory code reviews and unit testing. Algorithm lock criteria are defined in SW-PLAN-001.",
            "risk_management_plan_ref": "RMP-001",
            "human_factors_plan_ref": "HFE-PLAN-001",
            "config_management_plan_ref": "CM-PLAN-001",
            "design_review_plan": [
                {"phase_name": "Concept & Planning Freeze", "description": "Review and approve Design Plan, Risk Plan, and initial requirements.", "planned_date": str(base_date + timedelta(days=90))},
                {"phase_name": "Assay Design Freeze", "description": "Review and approve final assay chemistry and protocol before starting formal AV.", "planned_date": str(base_date + timedelta(days=180))},
                {"phase_name": "Algorithm & Software Lock", "description": "Review and approve final classifier model and pipeline version before starting clinical validation.", "planned_date": str(base_date + timedelta(days=365))},
                {"phase_name": "PMA Readiness Review", "description": "Final review of all DHF components prior to PMA submission.", "planned_date": str(base_date + timedelta(days=1250))}
            ]
        },
        "risk_management_file": {
            "plan_scope": "This plan covers all risks associated with the GenomicsDx Sentry™ service, from sample collection to result reporting, focusing on patient harm resulting from incorrect test results. The process adheres to ISO 14971:2019.",
            "hazards": [
                {"id": "H-01", "description": "False Negative Result", "foreseeable_event": "Assay fails to detect cancer signal in a patient who has cancer.", "potential_harm": "Delayed diagnosis and treatment, leading to worse clinical outcome.", "initial_S": 5, "initial_O": 3, "final_S": 5, "final_O": 2, "risk_control_measure": "Optimize assay LoD; extensive clinical validation to characterize sensitivity.", "verification_link": "AV-LOD-01"}, // <-- MODIFIED: Linked LoD optimization to the LoD study
                {"id": "H-02", "description": "False Positive Result", "foreseeable_event": "Assay detects a cancer signal in a patient who does not have cancer.", "potential_harm": "Patient anxiety, unnecessary and potentially invasive diagnostic follow-up procedures.", "initial_S": 4, "initial_O": 3, "final_S": 4, "final_O": 1, "risk_control_measure": "Optimize classifier for high specificity; clear labeling of test limitations.", "verification_link": "CV-STUDY-001"},
                {"id": "H-03", "description": "Sample Mix-up", "foreseeable_event": "Patient A's sample is processed under Patient B's identity.", "potential_harm": "Incorrect result delivered to two patients.", "initial_S": 5, "initial_O": 2, "final_S": 5, "final_O": 1, "risk_control_measure": "Implement 2D barcode system and LIMS integration for positive sample tracking.", "verification_link": "LIMS-VAL-01"},
                {"id": "H-04", "description": "Incorrect Cancer Signal Origin", "foreseeable_event": "A true cancer signal is detected, but the predicted origin is incorrect (e.g., predicted lung, actual colon).", "potential_harm": "Misdirected diagnostic workup, delaying correct diagnosis.", "initial_S": 3, "initial_O": 3, "final_S": 3, "final_O": 2, "risk_control_measure": "Train CSO classifier on diverse cancer types; validate CSO accuracy in clinical trial.", "verification_link": "CV-STUDY-001"}
            ],
            "assay_fmea": [
                {"id": "AFM-01", "process_step": "Bisulfite Conversion", "failure_mode": "Incomplete DNA conversion", "potential_effect": "Incorrect methylation measurement, potential false result.", "S": 4, "O": 3, "D": 2, "mitigation": "Include unmethylated lambda DNA control in every run; set QC metric for conversion efficiency.", "verification_link": "AV-PREC-01"}, // <-- MODIFIED: Linked QC metric to the precision study where it's used
                {"id": "AFM-02", "process_step": "Library Amplification", "failure_mode": "PCR contamination", "potential_effect": "False positive signal due to foreign DNA.", "S": 5, "O": 2, "D": 3, "mitigation": "Use physically separated pre/post-PCR areas; negative controls in each batch.", "verification_link": "PPQ-01"}, // <-- MODIFIED: Linked contamination control to the PPQ runs
                {"id": "AFM-03", "process_step": "Reagent Handling", "failure_mode": "Use of expired/improperly stored reagent", "potential_effect": "Systematic assay failure; inaccurate results for entire batch.", "S": 4, "O": 2, "D": 1, "mitigation": "LIMS-based reagent inventory tracking with automated expiry alerts.", "verification_link": ""} // <-- NOTE: Intentionally left blank to demonstrate the "Untraced" feature
            ],
            "service_fmea": [
                {"id": "SFM-01", "process_step": "Classifier Algorithm", "failure_mode": "Model overfitting to training data", "potential_effect": "Poor generalization, reduced accuracy on new patients.", "S": 5, "O": 3, "D": 3, "mitigation": "Use independent hold-out test set; cross-validation; L2 regularization.", "verification_link": "SW-VAL-01"}, // <-- MODIFIED: Linked model validation to the SW validation report
                {"id": "SFM-02", "process_step": "Data Transfer", "failure_mode": "Corruption of FASTQ file during upload from sequencer", "potential_effect": "Run failure; potential for incorrect data analysis if corruption is subtle.", "S": 4, "O": 2, "D": 1, "mitigation": "Implement MD5 checksum verification for all file transfers.", "verification_link": "SW-VER-02"}, // <-- MODIFIED: Linked to the specific checksum verification test
                {"id": "SFM-03", "process_step": "Report Generation", "failure_mode": "Patient demographic data mismatched with result data", "potential_effect": "Correct result delivered on a report with wrong patient name.", "S": 5, "O": 1, "D": 2, "mitigation": "Automated data merge using unique sample ID as primary key; manual QC check of report before release.", "verification_link": "HF-VAL-02"} // <-- MODIFIED: Linked to the usability study of the report
            ],
            "overall_risk_benefit_analysis": "The overall residual risk of the GenomicsDx Sentry™ Test, considering the implemented controls for false positive, false negative, and other identified hazards, is judged to be acceptable. The extensive analytical and clinical validation demonstrates that these risks have been mitigated to the lowest practicable level. The substantial clinical benefit of non-invasively detecting multiple cancers at an earlier, more treatable stage, outweighs the residual risks."
        },
        "human_factors": {
            "use_specification": {
                "intended_use_profile": "Screening for early cancer signal detection in asymptomatic, average-risk individuals aged 50-79.",
                "intended_user_profile": "Phlebotomists, Laboratory Technologists, Oncologists/PCPs.",
                "intended_use_environment": "Outpatient clinics, clinical laboratories, physician offices.",
                "key_operational_functions": "Sample collection, sample processing, data analysis, result interpretation."
            },
            "user_profiles": [
                {"user_group": "Phlebotomist", "description": "Certified phlebotomist with >1 year experience in clinical sample collection.", "training": "Standard phlebotomy training + product-specific IFU.", "use_environment": "Outpatient clinic or patient service center."},
                {"user_group": "Lab Technologist", "description": "ASCP-certified technologist with experience in molecular diagnostics.", "training": "BS in a chemical/physical/biological science + SOP-specific training.", "use_environment": "CLIA-certified, high-complexity molecular diagnostics laboratory."},
                {"user_group": "Oncologist", "description": "Board-certified oncologist responsible for patient management.", "training": "Medical degree, specialty training.", "use_environment": "Hospital or outpatient clinic office."}
            ],
            "kit_urra": [{"id":"URRA-K-01", "user_task": "Invert blood collection tube 8-10 times after draw.", "potential_use_error": "Tube not inverted or shaken vigorously.", "potential_harm": "Sample hemolysis, cfDNA degradation, invalid test result.", "related_hazard_id": "H-03", "risk_control_measure": "Clear graphical instructions in IFU; bolded text; design of tube cap encourages gentle handling.", "validation_link": "HF-VAL-01"}],
            "lab_urra": [{"id":"URRA-L-01", "user_task": "Pipette 50uL of plasma into reaction plate.", "potential_use_error": "Incorrect volume pipetted due to parallax error or incorrect pipette setting.", "potential_harm": "Assay failure or inaccurate quantification, leading to potential false result.", "related_hazard_id": "H-01", "risk_control_measure": "Use of calibrated, fixed-volume pipettes; SOP includes a second-person check step.", "validation_link": "HF-VAL-03"}],
            "report_urra": [{"id":"URRA-R-01", "user_task": "Interpret 'No Cancer Signal Detected' result.", "potential_use_error": "Physician tells patient they are 'cancer-free'.", "potential_harm": "Patient ignores future symptoms or skips routine screening (e.g., mammogram), leading to delayed diagnosis.", "related_hazard_id": "H-01", "risk_control_measure": "Include explicit limitation on report: 'This is not a diagnostic test... A 'No Cancer Signal Detected' result does not rule out cancer.'", "validation_link": "HF-VAL-02"}],
        },
        "design_inputs": { "requirements": [
                {"id": "UN-001", "type": "User Need", "description": "Provide a definitive result (Cancer Signal Detected/Not Detected) to guide patient management.", "parent_id": "", "status": "Active", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "UN-002", "type": "User Need", "description": "The process of collecting a sample should be simple and minimally invasive.", "parent_id": "", "status": "Active", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "SYS-001", "type": "System", "description": "The test shall achieve >99.0% specificity across all cancer types in the intended use population.", "parent_id": "UN-001", "status": "Active", "is_risk_control": True, "related_hazard_id": "H-02"},
                {"id": "SYS-002", "type": "System", "description": "The test shall achieve >85.0% sensitivity for Stage III cancers for the top 5 cancer types.", "parent_id": "UN-001", "status": "Active", "is_risk_control": True, "related_hazard_id": "H-01"},
                {"id": "ASY-001", "type": "Assay", "description": "The assay shall achieve a Limit of Detection (LoD) of <=0.1% tumor fraction for key biomarkers.", "parent_id": "SYS-002", "status": "Active", "is_risk_control": True, "related_hazard_id": "H-01"},
                {"id": "ASY-002", "type": "Assay", "description": "The inter-assay precision for a 0.5% TF control shall be <=20% CV.", "parent_id": "SYS-001", "status": "Active", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "SW-001", "type": "Software", "description": "The bioinformatics pipeline shall align >95% of reads to the hg38 reference genome.", "parent_id": "SYS-001", "status": "Active", "is_risk_control": False, "related_hazard_id": ""},
                {"id": "SW-002", "type": "Software", "description": "The system shall verify file integrity of all data transfers using a checksum.", "parent_id": "SYS-001", "status": "Active", "is_risk_control": True, "related_hazard_id": "H-03"},
                {"id": "KIT-001", "type": "Kit", "description": "The blood collection tube shall stabilize cfDNA for up to 7 days at ambient temperature.", "parent_id": "UN-002", "status": "Active", "is_risk_control": False, "related_hazard_id": ""}
            ]},
        "design_outputs": { "documents": [
                {"id": "SPEC-ASY-01", "type": "Assay Spec", "title": "Oligonucleotide Probe Sequences v1.2", "version": "1.2", "status": "Approved", "approval_date": str(base_date + timedelta(days=100)), "linked_input_id": "ASY-001", "link_to_artifact": "/docs/SPEC-ASY-01_v1.2.pdf"},
                {"id": "SPEC-SW-01", "type": "Software Spec", "title": "Bioinformatics Pipeline Software Design Specification (SDS)", "version": "2.1", "status": "Approved", "approval_date": str(base_date + timedelta(days=250)), "linked_input_id": "SW-001", "link_to_artifact": "https://github.com/genomicsdx/pipeline/docs/sds_v2.1.md"},
                {"id": "MODEL-01", "type": "Algorithm", "title": "Locked Classifier Model v3.0", "version": "3.0", "status": "Approved", "approval_date": str(base_date + timedelta(days=365)), "linked_input_id": "SYS-001", "link_to_artifact": "/models/classifier_v3.0.pkl"},
                {"id": "PROC-LAB-01", "type": "Procedure", "title": "SOP for cfDNA Extraction and Library Prep", "version": "2.0", "status": "In Review", "approval_date": None, "linked_input_id": "ASY-001", "link_to_artifact": None},
                {"id": "LBL-001", "type": "Labeling", "title": "Instructions For Use (IFU) - Sample Collection Kit", "version": "1.3", "status": "Approved", "approval_date": str(base_date + timedelta(days=300)), "linked_input_id": "KIT-001", "link_to_artifact": "/docs/IFU-001_v1.3.pdf"}
            ]},
        "design_reviews": { "reviews": [
                {"id": "DR-001", "date": str(demo_current_date - timedelta(days=270)), "attendees": ["Elena Reyes, PhD", "Sofia Chen, PhD", "Jose Bautista"], "type": "Technical", "phase": "Assay Concept", "independent_reviewer": "Jose Bautista", "scope": "Initial review of assay chemistry and biomarker panel.", "outcome": "Go", "notes": "Concept review complete. Feasibility approved.", "action_items": [{"id": "AI-DR001-01", "description": "Source alternative polymerase for improved stability.", "owner": "Sofia Chen, PhD", "due_date": str(demo_current_date - timedelta(days=255)), "status": "Completed", "risk_priority": "Medium", "voe_status": "N/A"}]},
                {"id": "DR-002", "date": str(base_date + timedelta(days=180)), "attendees": team_list, "type": "Phase-Gate", "phase": "Assay Design Freeze", "independent_reviewer": "Kenji Tanaka, PhD", "scope": "Review of all AV data for assay v1.2. Decision to lock assay design for pivotal studies.", "outcome": "Go", "notes": "AV performance meets all primary endpoints for LoD and Precision. Approved to proceed with this assay version for clinical validation.", "action_items": []},
                {"id": "DR-003", "date": str(base_date + timedelta(days=365)), "attendees": team_list, "type": "Phase-Gate", "phase": "Algorithm Lock", "independent_reviewer": "Sofia Chen, PhD", "scope": "Review of classifier performance on training data. Approval to lock model for clinical validation.", "outcome": "Go with Conditions", "notes": "Performance is acceptable. Condition: Finalize Software V&V report before starting patient enrollment.", "action_items": [{"id": "AI-DR003-01", "description": "Complete and approve SW-VAL-01.", "owner": "Marcus Thorne, PhD", "due_date": str(base_date + timedelta(days=380)), "status": "In Progress", "risk_priority": "High", "voe_status": "N/A"}, {"id": "AI-DR003-02", "description": "Update risk file (H-04) with residual software risks.", "owner": "Jose Bautista", "due_date": str(base_date + timedelta(days=375)), "status": "Open", "risk_priority": "Medium", "voe_status": "N/A"}]}
            ]},
        "design_verification": { "tests": [
                {"id": "AV-LOD-01", "test_type": "Limit of Detection (LoD)", "test_name": "LoD Study by Probit Analysis using Contrived Samples", "input_verified_id": "ASY-001", "output_verified_id": "SPEC-ASY-01", "status": "Completed", "result": "Pass", "report_link": "/reports/AV-LOD-01.pdf"},
                {"id": "AV-PREC-01", "test_type": "Intermediate Precision", "test_name": "Precision Study across 3 operators, 3 lots, 5 days", "input_verified_id": "ASY-002", "output_verified_id": "SPEC-ASY-01", "status": "Completed", "result": "Pass", "report_link": "/reports/AV-PREC-01.pdf"},
                {"id": "AV-INT-01", "test_type": "Interference", "test_name": "Testing of endogenous interferents (hemoglobin, lipids)", "input_verified_id": "SYS-001", "output_verified_id": "SPEC-ASY-01", "status": "In Progress", "result": "Pending", "report_link": ""},
                {"id": "SW-VER-01", "test_type": "SW Verification", "test_name": "Unit Test Suite for Alignment Module", "input_verified_id": "SW-001", "output_verified_id": "SPEC-SW-01", "status": "Completed", "result": "Pass", "report_link": "/reports/SW-VER-01.pdf"},
                {"id": "SW-VER-02", "test_type": "SW Verification", "test_name": "Verification of MD5 Checksum Implementation", "input_verified_id": "SW-002", "output_verified_id": "SPEC-SW-01", "status": "Completed", "result": "Pass", "report_link": "/reports/SW-VER-02.pdf"},
                {"id": "AV-STAB-01", "test_type": "Sample Stability", "test_name": "cfDNA stability in collection tube at ambient temp", "input_verified_id": "KIT-001", "output_verified_id": "LBL-001", "status": "Completed", "result": "Pass", "report_link": "/reports/AV-STAB-01.pdf"},
            ]},
        "design_validation": {}, # Populated under clinical_study for this model
        "design_changes": {"changes": [
            {"id": "DCR-001", "description": "Change polymerase enzyme to improve library yield", "reason": "Observed lower than expected yield in pilot lots, impacting assay sensitivity.", "initiator": "Sofia Chen, PhD", "request_date": str(base_date + timedelta(days=120)), "impact_analytical": True, "impact_risk": True, "vv_plan": "Execute bridging study comparing old vs. new enzyme (AV-BRIDGE-01). Re-execute LoD study (AV-LOD-02).", "approval_status": "Closed", "approval_date": str(base_date + timedelta(days=150)), "approvers": ["Elena Reyes, PhD", "Jose Bautista"], "action_items": []}
        ]},
        "clinical_study": {
            "nct_id": "NCT08675309", "phase": "Pivotal", "planned_completion_date": str(base_date + timedelta(days=1095)),
            "protocol_id": "CSP-001", "sap_id": "SAP-001",
            "primary_endpoints": "Co-primary endpoints are sensitivity and specificity for the detection of a cancer signal, evaluated against a ground truth of two-year follow-up.",
            "enrollment": [{"site": "Site-01 (USA)", "target": 5000, "enrolled": 3102}, {"site": "Site-02 (USA)", "target": 5000, "enrolled": 2895}],
            "performance_metrics": [{"metric": "Overall Sensitivity", "value": "N/A (Interim)", "confidence_interval": "N/A"}, {"metric": "Overall Specificity", "value": "99.5% (Interim)", "confidence_interval": "99.1% - 99.8%"}, {"metric": "CSO Accuracy (Top 1)", "value": "89.1% (Interim)", "confidence_interval": "85.5% - 92.7%"}],
            "hf_studies": [
                {"id": "HF-FORM-01", "study_name": "Formative Usability - IFU Comprehension", "user_interface_validated": "Sample Collection Kit & IFU", "user_need_validated": "UN-002", "confirms_risk_control": False, "status": "Completed", "report_link": "/reports/HF-FORM-01.pdf"},
                {"id": "HF-VAL-01", "study_name": "Summative Usability Study - Sample Collection Kit", "user_interface_validated": "Sample Collection Kit & IFU", "user_need_validated": "UN-002", "confirms_risk_control": True, "status": "Completed", "report_link": "/reports/HF-VAL-01.pdf"},
                {"id": "HF-VAL-02", "study_name": "Summative Usability Study - Clinical Report Interpretation", "user_interface_validated": "Clinical Report", "user_need_validated": "UN-001", "confirms_risk_control": True, "status": "In Progress", "report_link": ""},
                {"id": "HF-VAL-03", "study_name": "Summative Usability Study - Lab Workflow", "user_interface_validated": "LIMS/Portal", "user_need_validated": "UN-001", "confirms_risk_control": True, "status": "Not Started", "report_link": ""}
            ],
            "adverse_events": [
                {"id": "AE-001", "site": "Site-01 (USA)", "description": "Bruising at venipuncture site", "severity": "Mild", "related_to_device": True},
                {"id": "AE-002", "site": "Site-02 (USA)", "description": "Patient reported headache post-draw", "severity": "Mild", "related_to_device": False}
            ]
        },
        "lab_operations": {
            "sops": [{"doc_id": "SOP-LAB-001", "title": "Sample Accessioning and LIMS Entry", "version": "1.2", "status": "Approved", "training_records_link":"/training/SOP-LAB-001.pdf"}, {"doc_id": "SOP-LAB-002", "title": "cfDNA Extraction", "version": "1.0", "status": "Approved", "training_records_link":""}, {"doc_id": "SOP-LAB-003", "title": "Library Preparation", "version": "0.9", "status": "In Review", "training_records_link":""}],
            "infrastructure": [{"asset_id": "SEQ-01", "equipment_type": "Illumina NovaSeq X", "status": "PQ Complete", "qualification_report_link": "/validation/IQ-OQ-PQ_SEQ-01.pdf"}, {"asset_id": "LIMS-01", "equipment_type": "LabVantage LIMS v8", "status": "PQ Complete", "qualification_report_link": "/validation/LIMS-VAL-01.pdf"}],
            "software_deployment": [{"component": "Classifier Model", "version": "3.0", "deployment_date": str(base_date + timedelta(days=366)), "validation_protocol": "SW-DEP-VAL-01", "validation_report_link": "/reports/SW-DEP-VAL-01.pdf"}],
            "ppq_runs": [{"run_id": "PPQ-01", "description": "Run 1 of 3", "run_date": str(demo_current_date - timedelta(days=20)), "result": "Pass", "summary_report_link": "/reports/PPQ-01.pdf"}, {"run_id": "PPQ-02", "description": "Run 2 of 3", "run_date": str(demo_current_date - timedelta(days=10)), "result": "Pass", "summary_report_link": "/reports/PPQ-02.pdf"}, {"run_id": "PPQ-03", "description": "Run 3 of 3", "run_date": str(demo_current_date - timedelta(days=1)), "result": "In Progress", "summary_report_link": ""}],
            "run_failures": [{"failure_mode": "Low Library Yield"}, {"failure_mode": "Reagent QC Failure"}, {"failure_mode": "Low Library Yield"}, {"failure_mode": "Sequencing QC Failure"}, {"failure_mode": "Low Library Yield"}, {"failure_mode": "Contamination Detected"}],
            "readiness": {
                "reagent_lot_qualification": {"total": 10, "passed": 9},
                "inter_assay_precision": {"cv_pct": 8.5, "target_cv": 15.0},
                "sample_stability_studies": [{"condition": "7 Days Ambient", "result": "Pass"}, {"condition": "3 Freeze/Thaw Cycles", "result": "Pass"}, {"condition": "72hr Post-Extraction at 4C", "result": "In Progress"}]
            }
        },
        "quality_system": {
            "capa_records": [{"id": "CAPA-01", "status": "Closed", "source": "Internal Audit A-001", "description": "Procedure for reagent labeling was not consistently followed.", "action_plan": []}, {"id": "CAPA-02", "status": "Open", "source": "Supplier Corrective Action for IDT-Lot-123", "description": "High rate of oligo synthesis failure in a critical reagent lot from supplier IDT.", "action_plan": [{"id": "AI-CAPA02-01", "description": "Qualify new reagent lot from alt supplier", "owner": "Sofia Chen, PhD", "due_date": str(demo_current_date + timedelta(days=30)), "status": "Open", "risk_priority": "High", "voe_status": "N/A"}]}],
            "ncr_records": [{"id": "NCR-001", "status": "Closed", "description": "Temperature excursion in Refrigerator RF-02.", "correction_actions": [{"id":"AI-NCR01-01", "description":"Discard affected reagents", "owner":"Sofia Chen, PhD", "due_date": str(base_date + timedelta(days=100)), "status":"Completed", "risk_priority":"High", "voe_status":"N/A"}]}],
            "supplier_audits": [{"supplier": "IDT", "status": "Pass with Observations", "date": str(base_date + timedelta(days=20)), "report_id": "AUD-SUP-001"}, {"supplier": "Illumina", "status": "Pass", "date": str(base_date + timedelta(days=35)), "report_id": "AUD-SUP-002"}, {"supplier": "LabVantage", "status": "Pass", "date": str(base_date + timedelta(days=50)), "report_id": "AUD-SUP-003"}],
            "continuous_improvement": [{"date": str(demo_current_date - timedelta(days=d)), "ftr_rate": 95 - (d/30)*0.5, "copq_cost": 50000 - (d/30)*1000} for d in range(0, 181, 30)],
            "spc_data": {"target": 98.5, "stdev": 0.5, "measurements": [gauss(98.5, 0.5) for _ in range(50)], "usl": 100.0, "lsl": 97.0},
            "hypothesis_testing_data": {'pipeline_a': list(np.random.normal(0.012, 0.005, 30)), 'pipeline_b': list(np.random.normal(0.010, 0.005, 30))},
            "equivalence_data": {'reagent_lot_a': list(np.random.normal(0.85, 0.05, 30)), 'reagent_lot_b': list(np.random.normal(0.86, 0.05, 30))},
            "doe_data": doe_df.to_dict('records'),
            "rsm_data": rsm_data, # SME Enhancement: Add new RSM dataset
            "msa_data": [{"part": p, "operator": o, "measurement": round(gauss(p * 1.0, 0.08), 4)} for p in range(1, 11) for o in ["Tech A", "Tech B", "Tech C"] for _ in range(3)],
        },
        "project_management": { "tasks": [
                {"id": "PLAN", "name": "Program Planning & Design Inputs", "start_date": str(base_date), "end_date": str(base_date + timedelta(days=90)), "status": "Completed", "completion_pct": 100, "dependencies": "", "sign_offs": {"R&D": "✅", "Quality": "✅", "Regulatory": "✅"}},
                {"id": "AV", "name": "Assay Development & Analytical Validation", "start_date": str(base_date + timedelta(days=91)), "end_date": str(base_date + timedelta(days=365)), "status": "In Progress", "completion_pct": 75, "dependencies": "PLAN", "sign_offs": {"R&D": "In Progress", "Quality": "Pending", "Regulatory":"Pending"}},
                {"id": "SW", "name": "Software & Algorithm Development (V&V)", "start_date": str(base_date + timedelta(days=91)), "end_date": str(base_date + timedelta(days=400)), "status": "In Progress", "completion_pct": 80, "dependencies": "PLAN", "sign_offs": {"R&D": "In Progress", "Quality": "Pending", "Regulatory":"Pending"}},
                {"id": "CV", "name": "Pivotal Clinical Study", "start_date": str(base_date + timedelta(days=401)), "end_date": str(base_date + timedelta(days=1200)), "status": "In Progress", "completion_pct": 35, "dependencies": "AV,SW", "sign_offs": {"Clinical": "In Progress", "Quality": "Pending", "Regulatory": "Pending"}},
                {"id": "PMA", "name": "PMA Submission Preparation & Filing", "start_date": str(base_date + timedelta(days=1201)), "end_date": str(base_date + timedelta(days=1300)), "status": "Not Started", "completion_pct": 0, "dependencies": "CV", "sign_offs": {"Regulatory": "Pending", "Quality": "Pending", "Clinical":"Pending", "R&D":"Pending"}},
            ]},
        "assay_performance": { "parameters": [
                {"parameter": "Bisulfite Conversion Rate", "links_to_req": "ASY-001", "control_metric": "Lambda DNA Conversion Efficiency", "acceptance_criteria": "> 99.0%"},
                {"parameter": "Library Complexity", "links_to_req": "ASY-002", "control_metric": "Pre-Capture Library Molecules", "acceptance_criteria": "> 1E7"},
                {"parameter": "Mean Target Coverage", "links_to_req": "SYS-002", "control_metric": "Mean sequencing depth across target regions", "acceptance_criteria": "> 500x"}
            ]},
        "ml_models": {
            "classifier_data": (X_df, y_series.values),
            "classifier_model": None, # Will be populated in __init__
            "run_qc_data": [{"library_concentration": gauss(50,5), "dv200_percent": gauss(85,5), "adapter_dimer_percent": gauss(2,1), "outcome": "Pass"} for _ in range(80)] + [{"library_concentration": gauss(20,5), "dv200_percent": gauss(60,10), "adapter_dimer_percent": gauss(10,3), "outcome": "Fail"} for _ in range(20)],
            "sample_volume_data": pd.DataFrame({
                'date': pd.to_datetime(pd.date_range(start=base_date, periods=180, freq='D')),
                'samples': [int(10 + (i/10) + gauss(0, i/20)) for i in range(180)]
            }).to_dict('records')
        }
    }


class SessionStateManager:
    """Handles the initialization and access of the application's session state."""
    _DHF_DATA_KEY = "dhf_data"
    # Incremented to force a reload with the new robust RSM data
    _CURRENT_DATA_VERSION = 53

    def __init__(self):
        """Initializes the session state, loading the mock data if necessary."""
        from sklearn.ensemble import RandomForestClassifier

        session_data = st.session_state.get(self._DHF_DATA_KEY)
        if not session_data or session_data.get("data_version") != self._CURRENT_DATA_VERSION:
            logger.info(f"Initializing session state with MCED data model v{self._CURRENT_DATA_VERSION}.")
            try:
                dhf_data = _create_mced_diagnostic_dhf_model(self._CURRENT_DATA_VERSION)
                
                # Train and store the classifier model in the session state
                X, y = dhf_data['ml_models']['classifier_data']
                model = RandomForestClassifier(n_estimators=100, random_state=42)
                model.fit(X, y)
                dhf_data['ml_models']['classifier_model'] = model
                
                st.session_state[self._DHF_DATA_KEY] = dhf_data
                logger.info("Session state initialized successfully.")
            except AssertionError as e:
                logger.critical(f"FATAL: Data generation validation failed: {e}", exc_info=True)
                st.error(f"A critical error occurred during application startup: {e}. The application cannot continue. Please contact support.", icon="🚨")
                st.stop()


    def get_data(self, primary_key: str, secondary_key: Optional[str] = None) -> Any:
        """Safely retrieves data from the nested session state dictionary."""
        try:
            data_store = st.session_state.get(self._DHF_DATA_KEY, {})
            if secondary_key:
                return data_store.get(primary_key, {}).get(secondary_key, [])
            else:
                return data_store.get(primary_key, {})
        except (KeyError, AttributeError):
            logger.warning(f"Attempted to access non-existent or malformed session state key: '{primary_key}/{secondary_key}'")
            return {} if secondary_key is None else []

    def update_data(self, data: Any, primary_key: str, secondary_key: Optional[str] = None) -> None:
        """Updates the session state with new data."""
        try:
            if self._DHF_DATA_KEY not in st.session_state:
                st.session_state[self._DHF_DATA_KEY] = {}

            if secondary_key:
                if primary_key not in st.session_state[self._DHF_DATA_KEY]:
                    st.session_state[self._DHF_DATA_KEY][primary_key] = {}
                st.session_state[self._DHF_DATA_KEY][primary_key][secondary_key] = data
            else:
                st.session_state[self._DHF_DATA_KEY][primary_key] = data
            logger.info(f"Session state updated for {primary_key}.{secondary_key if secondary_key else ''}")
        except Exception as e:
            logger.error(f"Failed to update session state for {primary_key}/{secondary_key}: {e}", exc_info=True)
            st.error("A critical error occurred while trying to save data. Please refresh the page.")
